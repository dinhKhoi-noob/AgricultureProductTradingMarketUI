import React, { useEffect, useState } from "react";
import type { AppProps } from "next/app";
import Layout from "../src/components/layouts/Layout";
import LayoutContextProvider from "../src/context/LayoutContext";
import AuthContextProvider from "../src/context/AuthContext";
import { deepPurple, indigo } from "@mui/material/colors";
import { createTheme, ThemeProvider, useMediaQuery, useTheme } from "@mui/material";
import "../styles/globals.scss";
import Head from "next/head";
import ProductTypeContextProvider from "../src/context/ProductTypeContext";
import ChatContextProvier from "../src/context/ChatContext";
import UserContextProvider from "../src/context/UserContext";
import UploadFileContextProvider from "../src/context/UploadFileContext";
import ProductContextProvider from "../src/context/ProductContext";
import BuyingRequestContextProvider from "../src/context/BuyingRequestContext";
/**
 * Main page.
 * @param {ReactNode} Component is the app's component.
 * @param {ScriptProps} pageProps is the app's props.
 * @return {ReactNode} is the app's content.
 */
function MyApp({ Component, pageProps }: AppProps) {
    const themeBreakpoints = useTheme();
    const xsMatched = useMediaQuery(themeBreakpoints.breakpoints.up("xs"));
    const mdMatched = useMediaQuery(themeBreakpoints.breakpoints.up("md"));
    const smMatched = useMediaQuery(themeBreakpoints.breakpoints.up("sm"));
    const lgMatched = useMediaQuery(themeBreakpoints.breakpoints.up("lg"));
    const xlMatched = useMediaQuery(themeBreakpoints.breakpoints.up("xl"));
    const [htmlFontSize, setHtmlFontSize] = useState(14);
    useEffect(() => {
        if (xlMatched) {
            setHtmlFontSize(12);
            return;
        }
        if (lgMatched) {
            setHtmlFontSize(14);
            return;
        }
        if (mdMatched) {
            setHtmlFontSize(16);
            return;
        }
        if (smMatched) {
            setHtmlFontSize(18);
            return;
        }
        if (xsMatched) {
            setHtmlFontSize(20);
            return;
        }
    }, [xsMatched, smMatched, mdMatched, lgMatched, xlMatched]);
    const theme = createTheme({
        palette: {
            primary: indigo,
            secondary: deepPurple,
        },
        typography: {
            fontFamily: `-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
        Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;`,
            htmlFontSize: htmlFontSize,
            button: {
                textTransform: "none",
            },
        },
    });

    return (
        <LayoutContextProvider>
            <ThemeProvider theme={theme}>
                <AuthContextProvider>
                    <UploadFileContextProvider>
                        <UserContextProvider>
                            <Layout>
                                <Head>
                                    <title>Chợ nông sản Miền Tây</title>
                                    <meta name="description" content="Generated by create next app" />
                                    <link rel="icon" href="/favicon.ico" />
                                </Head>
                                <ProductTypeContextProvider>
                                    <ProductContextProvider>
                                        <ChatContextProvier>
                                            <BuyingRequestContextProvider>
                                                <Component {...pageProps} />
                                            </BuyingRequestContextProvider>
                                        </ChatContextProvier>
                                    </ProductContextProvider>
                                </ProductTypeContextProvider>
                            </Layout>
                        </UserContextProvider>
                    </UploadFileContextProvider>
                </AuthContextProvider>
            </ThemeProvider>
        </LayoutContextProvider>
    );
}

export default MyApp;
